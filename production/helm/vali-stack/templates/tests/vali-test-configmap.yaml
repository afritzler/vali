apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "vali-stack.fullname" . }}-test
  labels:
    app: {{ template "vali-stack.name" . }}
    chart: {{ template "vali-stack.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  test.sh: |
    #!/usr/bin/env bash

    VALI_URI="http://${VALI_SERVICE}:${VALI_PORT}"

    function setup() {
      apk add -u curl jq
      until (curl -s ${VALI_URI}/api/prom/label/app/values | jq -e '.values[] | select(. == "vali")'); do
        sleep 1
      done
    }

    @test "Has labels" {
      curl -s ${VALI_URI}/api/prom/label | \
      jq -e '.values[] | select(. == "app")'
    }

    @test "Query log entry" {
      curl -sG ${VALI_URI}/api/prom/query?limit=10 --data-urlencode 'query={app="vali"}' | \
      jq -e '.streams[].entries | length >= 1'
    }

    @test "Push log entry legacy" {
      local timestamp=$(date -Iseconds -u | sed 's/UTC/.000000000+00:00/')
      local data=$(jq -n --arg timestamp "${timestamp}" '{"streams": [{"labels": "{app=\"vali-test\"}", "entries": [{"ts": $timestamp, "line": "foobar"}]}]}')

      curl -s -X POST -H "Content-Type: application/json" ${VALI_URI}/api/prom/push -d "${data}"

      curl -sG ${VALI_URI}/api/prom/query?limit=1 --data-urlencode 'query={app="vali-test"}' | \
      jq -e '.streams[].entries[].line == "foobar"'
    }

    @test "Push log entry" {
      local timestamp=$(date +%s000000000)
      local data=$(jq -n --arg timestamp "${timestamp}" '{"streams": [{"stream": {"app": "vali-test"}, "values": [[$timestamp, "foobar"]]}]}')

      curl -s -X POST -H "Content-Type: application/json" ${VALI_URI}/vali/api/v1/push -d "${data}"

      curl -sG ${VALI_URI}/api/prom/query?limit=1 --data-urlencode 'query={app="vali-test"}' | \
      jq -e '.streams[].entries[].line == "foobar"'
    }

